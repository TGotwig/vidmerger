name: 🎉 Release
on:
  push:
   tags:
     - '*'
jobs:
  prepare:
    name: 👷 Prepare
    runs-on: macos-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v2
    - name: 🐣 Create Release folder on Github
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
            ### Changed

            - Files like `list.txt` and scaled videos will be created inside a temporary folder where the endpoint looks like `8EbQrP3j`:
              - MacOS: `/var/folders/q9/lgznjs3170b27wn5k9jd54g80000gn/T/<8-RAND-CHARS>`
              - Linux: `/tmp/<8-RAND-CHARS>`
              - Windows: `~/AppData/Local/Temp/<8-RAND-CHARS>`
            - Video files starting with a `.` will be ignored (can be the case when dealing with network volumes).
            - Append the following message to the success message: `(it can still be broken 🙈)`.

            ### Fixed

            - Set `-safe 0` to get rid of `[concat @ 0x55c6fb1e7600] Unsafe file name`.

        draft: false
        prerelease: false

  release-osx:
    name: 🍎 Release on MacOS
    runs-on: macos-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v2

    - name: 🧑‍🔧 Build Release
      run: cargo build --release && make zip-mac

    - name: ⬆️ Get version
      id: get_version
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
    
    - name: 🧮 Set SHA
      id: shasum
      run: |
        echo ::set-output name=sha::"$(shasum -a 256 target/release/vidmerger-mac.tar.gz | awk '{printf $1}')"

    - name: 🚀 Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ needs.prepare.outputs.upload_url }}
        asset_path: target/release/vidmerger-mac.tar.gz
        asset_name: vidmerger-mac.tar.gz
        asset_content_type: application/gzip

    - name: 🍺 Bump Brew
      env: 
        HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.token }}
      run: |
        brew tap tgotwig/homebrew-vidmerger
        brew bump-formula-pr -f --version=${{ steps.get_version.outputs.version }} --no-browse --no-audit \
        --sha256=${{ steps.shasum.outputs.sha }} \
        --url='https://github.com/tgotwig/vidmerger/releases/download/${{ steps.get_version.outputs.version }}/vidmerger-mac.tar.gz' \
        tgotwig/homebrew-vidmerger/vidmerger

  release-linux:
    name: 🐧 Release on Linux
    runs-on: ubuntu-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v2

    - name: 🧑‍🔧 Build Release
      run: cargo build --release && make zip-linux

    - name: ⬆️ Get version
      id: get_version
      run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
    
    - name: 🧮 Set SHA
      id: shasum
      run: |
        echo ::set-output name=sha::"$(shasum -a 256 target/release/vidmerger-linux.tar.gz | awk '{printf $1}')"

    - name: 🚀 Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.token }}
      with:
        upload_url: ${{ needs.prepare.outputs.upload_url }}
        asset_path: target/release/vidmerger-linux.tar.gz
        asset_name: vidmerger-linux.tar.gz
        asset_content_type: application/gzip

    - name: 🏝 Set git config
      run: |
          git config --global user.email "github@tomasu.mozmail.com"
          git config --global user.name "Thomas Gotwig"

    - name: 🍺 Bump Brew
      env: 
        HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.token }}
      run: |
        brew tap tgotwig/homebrew-linux-vidmerger
        brew bump-formula-pr -f --version=${{ steps.get_version.outputs.version }} --no-browse --no-audit \
        --sha256=${{ steps.shasum.outputs.sha }} \
        --url='https://github.com/tgotwig/vidmerger/releases/download/${{ steps.get_version.outputs.version }}/vidmerger-linux.tar.gz' \
        tgotwig/homebrew-linux-vidmerger/vidmerger
